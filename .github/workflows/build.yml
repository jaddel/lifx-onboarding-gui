name: Build Binary and Create Release

on:
  push:
    branches:
      - main

jobs:
  macos-build:
    runs-on: macos-latest
    steps:
      - name: Install dependencies
        run: |
          brew install python
          pip install pyinstaller
      - name: Build binary
        run: pyinstaller --onefile OnboardGUI.py
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: OnboardGUI-macos
          path: dist/OnboardGUI

  windows-build:
    runs-on: windows-latest
    steps:
      - name: Install dependencies
        run: |
          choco install python
          pip install pyinstaller
      - name: Build binary
        run: pyinstaller --onefile OnboardGUI.py
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: OnboardGUI-windows
          path: dist/OnboardGUI.exe

  ubuntu-build:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip
          pip3 install pyinstaller
      - name: Build binary
        run: pyinstaller --onefile OnboardGUI.py
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: OnboardGUI-ubuntu
          path: dist/OnboardGUI

  create-release:
    runs-on: ubuntu-latest
    needs: [macos-build, windows-build, ubuntu-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0
          release_name: Release v1.0.0
          draft: false
          prerelease: false
      - name: Upload macOS asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/OnboardGUI
          asset_name: OnboardGUI-macos
          asset_content_type: application/octet-stream
      - name: Upload Windows asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/OnboardGUI.exe
          asset_name: OnboardGUI-windows
          asset_content_type: application/octet-stream
